cabal-version: 3.0
name: literally
version: 0.2025.9.10
synopsis: Type-safe conversion of type literals into runtime values.
description:
  Literally is a minimal library that converts type literals into values
  using type-safe mechanisms. It provides a single 'literal' function that
  leverages Haskell's type system to convert compile-time literals (numbers,
  strings, characters, booleans, tuples) into runtime values with compile-time
  correctness guarantees. The library supports numeric types with automatic
  bounds checking, string and character literals, boolean values, unit types,
  and tuple types.

category: Data
extra-doc-files:
  CHANGELOG.md
  README.md

license: 0BSD
license-file: LICENSE.txt
maintainer: Taylor Fausak

source-repository head
  location: https://github.com/tfausak/literally
  type: git

library
  build-depends: base ^>={4.20, 4.21}
  default-language: Haskell2010
  exposed-modules: Literally
  ghc-options:
    -Weverything
    -Wno-implicit-prelude
    -Wno-missing-deriving-strategies
    -Wno-missing-export-lists
    -Wno-missing-kind-signatures
    -Wno-missing-safe-haskell-mode
    -Wno-prepositive-qualified-module
    -Wno-safe
